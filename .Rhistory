unnest_tokens(input = "text", output = "Palabra") %>%
inner_join(afinn, ., by = "Palabra") %>%
mutate(Tipo = ifelse(Puntuacion > 0, "Positiva", "Negativa")) %>%
rename("Candidato" = screenName)
df.afinn
df.tweet <-
df.tweet %>%
group_by(id) %>%
summarise(Puntuacion_tuit = mean(Puntuacion)) %>%
left_join(tuits, ., by = "status_id") %>%
mutate(Puntuacion_tuit = ifelse(is.na(Puntuacion_tuit), 0, Puntuacion_tuit)) %>%
rename("Candidato" = screen_name)
df.tweet <-
df.tweet %>%
group_by(id) %>%
summarise(Puntuacion_tuit = mean(Puntuacion)) %>%
left_join(tuits, ., by = "status_id") %>%
mutate(Puntuacion_tuit = ifelse(is.na(Puntuacion_tuit), 0, Puntuacion_tuit)) %>%
rename("Candidato" = screenName)
df.tweet <-
df.tweet %>%
unnest_tokens(input = "text", output = "Palabra") %>%
inner_join(afinn, ., by = "Palabra") %>%
mutate(Tipo = ifelse(Puntuacion > 0, "Positiva", "Negativa")) %>%
rename("Candidato" = screenName)
df.tweet
df.tweet <-
df.tweet %>%
separate(created, into = c("Fecha", "Hora"), sep = " ")
df.tweet %>%
unnest_tokens(input = "text", output = "Palabra") %>%
inner_join(afinn, ., by = "Palabra") %>%
mutate(Tipo = ifelse(Puntuacion > 0, "Positiva", "Negativa")) %>%
rename("Candidato" = screenName)
df.tweet %>%
unnest_tokens(input = "text", output = "Palabra") %>%
inner_join(afinn, ., by = "Palabra") %>%
mutate(Tipo = ifelse(Puntuacion > 0, "Positiva", "Negativa")) %>%
rename("Candidato" = screenName)
df.tweet %>%
unnest_tokens(input = "text", output = "Palabra")
df.tweet <-
df.tweet %>%
separate(created, into = c("Fecha", "Hora"), sep = " ")
n <- 50
vcuenta<-'ClaudiaPavlovic'
df.tweet <- userTimeline(vcuenta, n, maxID=NULL, sinceID=NULL,
includeRts=FALSE, excludeReplies=FALSE) %>%
twListToDF()
df.tweet %>% head()
df.tweet <-
df.tweet %>%
separate(created, into = c("Fecha", "Hora"), sep = " ")
#%>%
#  separate(Fecha, into = c("Dia", "Mes", "Periodo"), sep = "/",
#           remove = FALSE) %>%
#  mutate(Fecha = dmy(Fecha),
#         Semana = week(Fecha) %>% as.factor(),
#         text = tolower(text))
df.tweet %>%
unnest_tokens(input = "text", output = "Palabra") %>%
inner_join(afinn, ., by = "Palabra") %>%
mutate(Tipo = ifelse(Puntuacion > 0, "Positiva", "Negativa")) %>%
rename("Candidato" = screenName)
df.afinn <-
df.tweet %>%
unnest_tokens(input = "text", output = "Palabra") %>%
inner_join(afinn, ., by = "Palabra") %>%
mutate(Tipo = ifelse(Puntuacion > 0, "Positiva", "Negativa")) %>%
rename("Candidato" = screenName)
df.afinn <-
df.tweet %>%
unnest_tokens(input = "text", output = "Palabra") %>%
inner_join(afinn, ., by = "Palabra") %>%
mutate(Tipo = ifelse(Puntuacion > 0, "Positiva", "Negativa")) %>%
rename("Candidato" = screenName)
df.tweet <-
df.afinn %>%
group_by(id) %>%
summarise(Puntuacion_tuit = mean(Puntuacion)) %>%
left_join(tuits, ., by = "status_id") %>%
mutate(Puntuacion_tuit = ifelse(is.na(Puntuacion_tuit), 0, Puntuacion_tuit)) %>%
rename("Candidato" = screenName)
View(df.afinn)
df.tweet <-
df.afinn %>%
group_by(id) %>%
summarise(Puntuacion_tuit = mean(Puntuacion)) %>%
left_join(tuits, ., by = "status_id") %>%
mutate(Puntuacion = ifelse(is.na(Puntuacion), 0, Puntuacion)) %>%
rename("Candidato" = screenName)
df.tweet <-
df.afinn %>%
group_by(id) %>%
summarise(Puntuacion_tuit = mean(Puntuacion)) %>%
left_join(tuits, ., by = "id") %>%
mutate(Puntuacion = ifelse(is.na(Puntuacion), 0, Puntuacion)) %>%
rename("Candidato" = screenName)
df.tweet <-
df.afinn %>%
group_by(id) %>%
summarise(Puntuacion = mean(Puntuacion)) %>%
left_join(tuits, ., by = "id") %>%
mutate(Puntuacion = ifelse(is.na(Puntuacion), 0, Puntuacion)) %>%
rename("Candidato" = screenName)
df.tweet <-
df.afinn %>%
group_by(id) %>%
summarise(Puntuacion_tuit = mean(Puntuacion)) %>%
left_join(tuits, ., by = "id") %>%
mutate(Puntuacion_tuit = ifelse(is.na(Puntuacion_tuit), 0, Puntuacion_tuit)) %>%
rename("Candidato" = screenName)
df.tweet <-
df.afinn %>%
group_by(id) %>%
summarise(Puntuacion_tuit = mean(Puntuacion)) %>%
left_join(df.tweet, ., by = "id") %>%
mutate(Puntuacion_tuit = ifelse(is.na(Puntuacion_tuit), 0, Puntuacion_tuit)) %>%
rename("Candidato" = screenName)
# Total
tuits_afinn %>%
count(Candidato)
# Total
df.afinn %>%
count(Candidato)
# Únicas
df.afinn %>%
group_by(Candidato) %>%
distinct(Palabra) %>%
count()
map(c("Positiva", "Negativa"), function(sentimiento) {
df.afinn %>%
filter(Tipo ==  sentimiento) %>%
group_by(Candidato) %>%
count(Palabra, sort = T) %>%
top_n(n = 10, wt = n) %>%
ggplot() +
aes(Palabra, n, fill = Candidato) +
geom_col() +
facet_wrap("Candidato", scales = "free") +
scale_y_continuous(expand = c(0, 0)) +
coord_flip() +
labs(title = sentimiento) +
tema_graf
})
tema_graf <-
theme_minimal() +
theme(text = element_text(family = "serif"),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = "#EBEBEB", colour = NA),
legend.position = "none",
legend.box.background = element_rect(fill = "#EBEBEB", colour = NA))
map(c("Positiva", "Negativa"), function(sentimiento) {
df.afinn %>%
filter(Tipo ==  sentimiento) %>%
group_by(Candidato) %>%
count(Palabra, sort = T) %>%
top_n(n = 10, wt = n) %>%
ggplot() +
aes(Palabra, n, fill = Candidato) +
geom_col() +
facet_wrap("Candidato", scales = "free") +
scale_y_continuous(expand = c(0, 0)) +
coord_flip() +
labs(title = sentimiento) +
tema_graf
})
setup_twitter_oauth(CK, CS, AT, AS)
tuits_afinn <-
tuits_afinn %>%
filter(Palabra != "no")
df.afinn <-
df.afinn %>%
filter(Palabra != "no")
df.afinn.fecha <-
df.afinn %>%
group_by(status_id) %>%
mutate(Suma = mean(Puntuacion)) %>%
group_by(Candidato, Fecha) %>%
summarise(Media = mean(Puntuacion))
df.afinn.fecha <-
df.afinn %>%
group_by(id) %>%
mutate(Suma = mean(Puntuacion)) %>%
group_by(Candidato, Fecha) %>%
summarise(Media = mean(Puntuacion))
df.afinn.fecha %>%
ggplot() +
aes(Fecha, Media, color = Candidato) +
geom_line() +
tema_graf +
theme(legend.position = "top")
vcuenta <-c("ClaudiaPavlovic", "lopezobrador_")
usuarios <-c("ClaudiaPavlovic", "lopezobrador_")
df.tweet <- c()
for (i in 1:length(usuarios)){
temp <- userTimeline(usuarios[i], n, maxID=NULL, sinceID=NULL,
includeRts=FALSE, excludeReplies=FALSE) %>%
twListToDF()
df.tweet <- rbind(df.tweet, temp)
}
View(df.tweet)
rm(temp)
df.tweet <-
df.tweet %>%
separate(created, into = c("Fecha", "Hora"), sep = " ")
#%>%
#  separate(Fecha, into = c("Dia", "Mes", "Periodo"), sep = "/",
#           remove = FALSE) %>%
#  mutate(Fecha = dmy(Fecha),
#         Semana = week(Fecha) %>% as.factor(),
#         text = tolower(text))
df.afinn <-
df.tweet %>%
unnest_tokens(input = "text", output = "Palabra") %>%
inner_join(afinn, ., by = "Palabra") %>%
mutate(Tipo = ifelse(Puntuacion > 0, "Positiva", "Negativa")) %>%
rename("Candidato" = screenName)
df.tweet <-
df.afinn %>%
group_by(id) %>%
summarise(Puntuacion_tuit = mean(Puntuacion)) %>%
left_join(df.tweet, ., by = "id") %>%
mutate(Puntuacion_tuit = ifelse(is.na(Puntuacion_tuit), 0, Puntuacion_tuit)) %>%
rename("Candidato" = screenName)
# Total
df.afinn %>%
count(Candidato)
# Únicas
df.afinn %>%
group_by(Candidato) %>%
distinct(Palabra) %>%
count()
map(c("Positiva", "Negativa"), function(sentimiento) {
df.afinn %>%
filter(Tipo ==  sentimiento) %>%
group_by(Candidato) %>%
count(Palabra, sort = T) %>%
top_n(n = 10, wt = n) %>%
ggplot() +
aes(Palabra, n, fill = Candidato) +
geom_col() +
facet_wrap("Candidato", scales = "free") +
scale_y_continuous(expand = c(0, 0)) +
coord_flip() +
labs(title = sentimiento) +
tema_graf
})
df.afinn <-
df.afinn %>%
filter(Palabra != "no")
df.afinn.fecha <-
df.afinn %>%
group_by(id) %>%
mutate(Suma = mean(Puntuacion)) %>%
group_by(Candidato, Fecha) %>%
summarise(Media = mean(Puntuacion))
df.afinn.fecha %>%
ggplot() +
aes(Fecha, Media, color = Candidato) +
geom_line() +
tema_graf +
theme(legend.position = "top")
df.afinn.fecha
df.afinn.fecha %>%
ggplot() +
aes(Fecha, Media, color = Candidato) +
geom_line() +
tema_graf +
theme(legend.position = "top")
df.afinn.fecha
df.afinn <-
df.afinn %>%
filter(Palabra != "no")
df.afinn
df.afinn.fecha %>%
ggplot() +
aes(Fecha, Media, color = Candidato) +
geom_line() +
theme(legend.position = "top")
df.afinn.fecha %>%
ggplot() +
aes(Fecha, Media) +
geom_line() +
theme(legend.position = "top")
df.afinn.fecha <- xts(df.afinn %>%
group_by(id) %>%
mutate(Suma = mean(Puntuacion)) %>%
group_by(Candidato, Fecha) %>%
summarise(Media = mean(Puntuacion)),
order_by(Fecha))
library(TRR)
library(TTR)
df.afinn.fecha <- xts(df.afinn %>%
group_by(id) %>%
mutate(Suma = mean(Puntuacion)) %>%
group_by(Candidato, Fecha) %>%
summarise(Media = mean(Puntuacion)),
order_by(Fecha))
library(xts)
df.afinn <-
df.afinn %>%
filter(Palabra != "no")
df.afinn.fecha <- xts(df.afinn %>%
group_by(id) %>%
mutate(Suma = mean(Puntuacion)) %>%
group_by(Candidato, Fecha) %>%
summarise(Media = mean(Puntuacion)),
order_by(Fecha))
df.afinn %>%
group_by(id) %>%
mutate(Suma = mean(Puntuacion)) %>%
group_by(Candidato, Fecha) %>%
summarise(Media = mean(Puntuacion))
df.afinn.fecha <- df.afinn %>%
group_by(id) %>%
mutate(Suma = mean(Puntuacion)) %>%
group_by(Candidato, Fecha) %>%
summarise(Media = mean(Puntuacion))
View(df.afinn.fecha)
df.afinn.fecha <- xts(df.afinn %>%
group_by(id) %>%
mutate(Suma = mean(Puntuacion)) %>%
group_by(Candidato, Fecha) %>%
summarise(Media = mean(Puntuacion)),
order.by(Fecha))
df.afinn.fecha
df.afinn.fecha
df.afinn.fecha <- xts(df.afinn.fecha, order.by = Fecha)
View(df.afinn.fecha)
group_by(id) %>%
mutate(Suma = mean(Puntuacion)) %>%
group_by(Candidato, Fecha) %>%
summarise(Media = mean(Puntuacion))
df.afinn.date <- df.afinn %>%
group_by(id) %>%
mutate(Suma = mean(Puntuacion)) %>%
group_by(Candidato, Fecha) %>%
summarise(Media = mean(Puntuacion))
df.afinn.date <- xts(df.afinn.date, order.by = df.afinn.date$Fecha)
df.tweet
df.tweet <-
df.tweet %>%
separate(created, into = c("Fecha", "Hora"), sep = " ") %>%
mutate(Fecha %<>% ymd())
library(maggrit)
library(magrittr)
library(xts)
n <- 50
usuarios <-c("ClaudiaPavlovic", "lopezobrador_")
df.tweet <- c()
for (i in 1:length(usuarios)){
temp <- userTimeline(usuarios[i], n, maxID=NULL, sinceID=NULL,
includeRts=FALSE, excludeReplies=FALSE) %>%
twListToDF()
df.tweet <- rbind(df.tweet, temp)
}
rm(temp)
df.tweet <-
df.tweet %>%
separate(created, into = c("Fecha", "Hora"), sep = " ") %>%
mutate(Fecha %<>% ymd())
#%>%
#  separate(Fecha, into = c("Dia", "Mes", "Periodo"), sep = "/",
#           remove = FALSE) %>%
#  mutate(Fecha = dmy(Fecha),
#         Semana = week(Fecha) %>% as.factor(),
#         text = tolower(text))
df.tweet$Fecha %<>% ymd()
n <- 50
usuarios <-c("ClaudiaPavlovic", "lopezobrador_")
df.tweet <- c()
for (i in 1:length(usuarios)){
temp <- userTimeline(usuarios[i], n, maxID=NULL, sinceID=NULL,
includeRts=FALSE, excludeReplies=FALSE) %>%
twListToDF()
df.tweet <- rbind(df.tweet, temp)
}
rm(temp)
df.tweet <-
df.tweet %>%
separate(created, into = c("Fecha", "Hora"), sep = " ") %>%
mutate(Fecha %<>% ymd())
df.tweet <- df.tweet %>%
separate(created, into = c("Fecha", "Hora"), sep = " ") %>%
mutate(Fecha = Fecha %<>% ymd())
n <- 50
usuarios <-c("ClaudiaPavlovic", "lopezobrador_")
df.tweet <- c()
for (i in 1:length(usuarios)){
temp <- userTimeline(usuarios[i], n, maxID=NULL, sinceID=NULL,
includeRts=FALSE, excludeReplies=FALSE) %>%
twListToDF()
df.tweet <- rbind(df.tweet, temp)
}
rm(temp)
df.tweet <- df.tweet %>%
separate(created, into = c("Fecha", "Hora"), sep = " ")
df.tweet$Fecha %<>% ymd()
#%>%
#  separate(Fecha, into = c("Dia", "Mes", "Periodo"), sep = "/",
#           remove = FALSE) %>%
#  mutate(Fecha = dmy(Fecha),
#         Semana = week(Fecha) %>% as.factor(),
#         text = tolower(text))
df.afinn <-
df.tweet %>%
unnest_tokens(input = "text", output = "Palabra") %>%
inner_join(afinn, ., by = "Palabra") %>%
mutate(Tipo = ifelse(Puntuacion > 0, "Positiva", "Negativa")) %>%
rename("Candidato" = screenName)
df.tweet <-
df.afinn %>%
group_by(id) %>%
summarise(Puntuacion_tuit = mean(Puntuacion)) %>%
left_join(df.tweet, ., by = "id") %>%
mutate(Puntuacion_tuit = ifelse(is.na(Puntuacion_tuit), 0, Puntuacion_tuit)) %>%
rename("Candidato" = screenName)
# Total
df.afinn %>%
count(Candidato)
# Únicas
df.afinn %>%
group_by(Candidato) %>%
distinct(Palabra) %>%
count()
map(c("Positiva", "Negativa"), function(sentimiento) {
df.afinn %>%
filter(Tipo ==  sentimiento) %>%
group_by(Candidato) %>%
count(Palabra, sort = T) %>%
top_n(n = 10, wt = n) %>%
ggplot() +
aes(Palabra, n, fill = Candidato) +
geom_col() +
facet_wrap("Candidato", scales = "free") +
scale_y_continuous(expand = c(0, 0)) +
coord_flip() +
labs(title = sentimiento) +
tema_graf
})
df.afinn <-
df.afinn %>%
filter(Palabra != "no")
df.afinn.date <- df.afinn %>%
group_by(id) %>%
mutate(Suma = mean(Puntuacion)) %>%
group_by(Candidato, Fecha) %>%
summarise(Media = mean(Puntuacion))
df.afinn.fecha %>%
ggplot() +
aes(Fecha, Media, color = Candidato) +
geom_line() +
theme(legend.position = "top")
df.afinn.date <- df.afinn %>%
group_by(id) %>%
mutate(Suma = mean(Puntuacion)) %>%
group_by(Candidato, Fecha) %>%
summarise(Media = mean(Puntuacion))
df.afinn.date <- xts(df.afinn.date, order.by = df.afinn.date$Fecha)
df.afinn.date
df.afinn.fecha <- xts(df.afinn %>%
group_by(id) %>%
mutate(Suma = mean(Puntuacion)) %>%
group_by(Candidato, Fecha) %>%
summarise(Media = mean(Puntuacion)),
order.by(Fecha))
dygraph(df.afinn.date) %>%
dyOptions(fillGraph=TRUE, colors = "darkolivegreen", pointShape = "ex") %>%
dyRangeSelector()
library(dygraphs)
dygraph(df.afinn.date) %>%
dyOptions(fillGraph=TRUE, colors = "darkolivegreen", pointShape = "ex") %>%
dyRangeSelector()
df.afinn.date
df.afinn
df.afinn.date
# Total
df.afinn %>%
count(Candidato)
# Únicas
df.afinn %>%
group_by(Candidato) %>%
distinct(Palabra) %>%
count()
xts.afinn.date <- df.afinn %>%
group_by(id) %>%
group_by(Candidato, Fecha) %>%
mutate(AMLO = ifelse(Candidato == "lopezobrador_"), mean(Puntuacion), NA) %>%
group_by(Candidato, Fecha) %>%
summarise(Media = mean(Puntuacion))
xts.afinn.date <- df.afinn %>%
group_by(id) %>%
group_by(Candidato, Fecha) %>%
mutate(AMLO = ifelse(Candidato == "lopezobrador_"), mean(Puntuacion), NA)
df.afinn <-
df.tweet %>%
unnest_tokens(input = "text", output = "Palabra") %>%
inner_join(afinn, ., by = "Palabra") %>%
mutate(Tipo = ifelse(Puntuacion > 0, "Positiva", "Negativa")) %>%
rename("Candidato" = screenName)
df.tweet <- df.tweet %>%
separate(created, into = c("Fecha", "Hora"), sep = " ")
n <- 50
usuarios <-c("ClaudiaPavlovic", "lopezobrador_")
df.tweet <- c()
for (i in 1:length(usuarios)){
temp <- userTimeline(usuarios[i], n, maxID=NULL, sinceID=NULL,
includeRts=FALSE, excludeReplies=FALSE) %>%
twListToDF()
df.tweet <- rbind(df.tweet, temp)
}
